buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'maven-publish'
}

allprojects {
    group 'com.github.only52607.lua-mirai'
    version '2.7.0'
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = ['-Xjvm-default=enable', '-Xopt-in=kotlin.RequiresOptIn', '-Xcontext-receivers']
            jvmTarget = "1.8"
        }
    }
    repositories {
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    dependencies {
        def mirai_core_version = "2.11.0"
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "net.mamoe:mirai-core-api:$mirai_core_version"
        runtimeOnly "net.mamoe:mirai-core:$mirai_core_version"
        testImplementation group: 'junit', name: 'junit', version: '4.12'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set('sources')
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier.set('javadoc')
    }
}

publishing {
    publications {
        luaMiraiCore(MavenPublication) {
            setArtifactId("core")
            def coreProject = project(':lua-mirai-core')
            from coreProject.components.java
            artifact coreProject.tasks.sourcesJar
            artifact coreProject.tasks.javadocJar
        }

        luaktAdapter(MavenPublication) {
            setArtifactId("adapter-lua")
            def luaktAdapterProject = project(':lua-mirai-adapter-luakt')
            from luaktAdapterProject.components.java
            artifact luaktAdapterProject.tasks.sourcesJar
            artifact luaktAdapterProject.tasks.javadocJar
        }

        configuration(MavenPublication) {
            setArtifactId("configuration")
            def luaktAdapterProject = project(':lua-mirai-configuration')
            from luaktAdapterProject.components.java
            artifact luaktAdapterProject.tasks.sourcesJar
            artifact luaktAdapterProject.tasks.javadocJar
        }
    }
}