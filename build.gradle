buildscript{
    ext.kotlin_version = "1.4.21"

    ext.mirai_core_version = "2.6.7"
    ext.mirai_console_version = "2.0.0"

    ext.okhttp3_version = "4.7.2"
    ext.jsoup_version = "1.7.3"
    ext.sqlite_jdbc_version = "3.7.2"

    ext.shadow_version = "6.1.0"

    ext.auto_service_version = "1.0-rc7"

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        jcenter()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "1.4.21"
    id 'com.github.johnrengelman.shadow' version "5.2.0"
    id "com.jfrog.bintray" version "1.8.4"
    id 'maven-publish'
//    id "org.jetbrains.kotlin.kapt" version "1.4.21"
//    id "net.mamoe.mirai-console" version "2.0.0"
}

group aritifact_group
version aritifact_version

repositories {
    maven { url 'https://jitpack.io' }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation 'org.json:json:20160212'
    implementation "org.xerial:sqlite-jdbc:$sqlite_jdbc_version"
    implementation "org.jsoup:jsoup:$jsoup_version"

    implementation "net.mamoe:mirai-core-api:$mirai_core_version"
    runtimeOnly "net.mamoe:mirai-core:$mirai_core_version"
    compileOnly "net.mamoe:mirai-console:$mirai_console_version"
    testImplementation "net.mamoe:mirai-console-terminal:$mirai_console_version"

//    kapt "com.google.auto.service:auto-service:$auto_service_version"
//    compileOnly "com.google.auto.service:auto-service-annotations:$auto_service_version"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

allprojects {
    //Support @JvmDefault
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = ['-Xjvm-default=enable'] //enable or compatibility
            jvmTarget = "1.8"
        }
    }
}

shadowJar {
    archiveBaseName.set(aritifact_name)
    archiveClassifier.set('')
    archiveVersion.set(aritifact_version)
    manifest {
        attributes(
                'Main-Class': 'com.ooooonly.luaMirai.MainKt'
        )
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

bintray {
    try{
        Properties properties = new Properties()
        InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
        properties.load(inputStream)
        user = properties.getProperty('BINTRAY_USER') //System.getenv('BINTRAY_USER')
        key = properties.getProperty('BINTRAY_KEY') //System.getenv('BINTRAY_KEY')
    }catch(Exception e){
        e.printStackTrace()
    }
    override = true     //如果有相同版本是否覆盖
    publish = true      //是否上传后直接发布
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = user
        licenses = ['AGPL-V3']
        vcsUrl = "github.com/only52607/lua-mirai"
        issueTrackerUrl = "github.com/only52607/lua-mirai/issues"
        version {
            name = aritifact_version
            desc = aritifact_description
            released = new Date()
            vcsTag = aritifact_version
        }
    }
    publications = ['LMPublication']
}

publishing {
    publications {
        LMPublication(MavenPublication) {
            artifact(jar)               //配置库jar包
            artifact(sourcesJar)        //配置库源码jar包
            artifact(javadocJar)        //配置库javadoc jar包
            groupId aritifact_group     //包名
            artifactId aritifact_id     //库id
            version aritifact_version   //设置版本号
        }
    }
}