buildscript {
    ext.mirai_core_version = "2.9.2"
    repositories {
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "1.6.10"
    id 'maven-publish'
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

allprojects {
    group 'com.github.only52607'
    version '2.4.0'
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = ['-Xjvm-default=enable', '-Xopt-in=kotlin.RequiresOptIn']
            jvmTarget = "1.8"
        }
    }
    repositories {
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "net.mamoe:mirai-core-api:$mirai_core_version"
        runtimeOnly "net.mamoe:mirai-core:$mirai_core_version"
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

project(':lua-mirai-core') {
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set('sources')
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier.set('javadoc')
    }

    publishing {
        publications {
            core(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}

project(':lua-mirai-adapter-luakt') {
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set('sources')
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier.set('javadoc')
    }

    publishing {
        publications {
            luaktAdapter(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}